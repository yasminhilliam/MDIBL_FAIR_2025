scale = 1,
rel_min_height = 0.001)
gapminder %>%
filter(year %in% c("1952","1962","1972","1982","1992","2002")) %>%
filter(
continent != "Oceania" # removing due to too few countries for density plotting
) %>%
ggplot(aes(x = lifeExp,
y = continent,
fill = as.factor(year))) +
geom_density_ridges(alpha = 0.2,
scale = 1,
rel_min_height = 0.001)
gapminder %>%
filter(year %in% c("1952","1962","1972","1982","1992","2002")) %>%
filter(
continent != "Oceania" # removing due to too few countries for density plotting
) %>%
ggplot(aes(x = lifeExp,
y = continent,
fill = as.factor(year))) +
geom_density_ridges(alpha = 0.2,
scale = 0.9,
rel_min_height = 0.001)
gapminder %>%
filter(year %in% c("1952","1962","1972","1982","1992","2002")) %>%
filter(
continent != "Oceania" # removing due to too few countries for density plotting
) %>%
ggplot(aes(x = lifeExp,
y = continent,
fill = as.factor(year))) +
geom_density_ridges(alpha = 0.5,
scale = 0.9)
gapminder %>%
filter(year %in% c("1952","1962","1972","1982","1992","2002")) %>%
filter(
continent != "Oceania" # removing due to too few countries for density plotting
) %>%
ggplot(aes(x = lifeExp,
y = continent,
fill = as.factor(year))) +
geom_density_ridges(alpha = 0.5,
scale = 0.9) +
labs(x = "Life expectancy (years)",
y = "Continent") +
scale_fill_manual(name = "Year")
gapminder %>%
filter(year %in% c("1952","1962","1972","1982","1992","2002")) %>%
filter(
continent != "Oceania" # removing due to too few countries for density plotting
) %>%
ggplot(aes(x = lifeExp,
y = continent,
fill = as.factor(year))) +
geom_density_ridges(alpha = 0.5,
scale = 0.9) +
labs(x = "Life expectancy (years)",
y = "Continent") +
scale_fill_discrete(name = "Year")
gapminder %>%
filter(year %in% c("1952","1962","1972","1982","1992","2002")) %>%
filter(
continent != "Oceania" # removing due to too few countries for density plotting
) %>%
ggplot(aes(x = lifeExp,
y = continent,
fill = as.factor(year))) +
geom_density_ridges(alpha = 0.5,
scale = 0.9) +
labs(x = "Life expectancy (years)",
y = "Continent") +
scale_fill_discrete(name = "Year") -> life_exp
?ggreveal
library(ggreveal)
?reveal_aes
reveal_aes(life_exp,
aes = fill)
reveal_aes(life_exp,
aes = "fill")
reveal_aes(life_exp,
aes = "fill") -> plot_list
plot_list
?reveal_save
reveal_save(
plot_list, # list of plots
"life_exp.tiff", # basename of all plots
path = tempdir() # set directory for temporary files
)
file.remove(list.files(path = tempdir(),
pattern = "life_exp",
full.names = TRUE))
getwd()
reveal_aes(life_exp,
aes = "fill") -> plot_list
plot_list
reveal_save(
plot_list, # list of plots
"life_exp.tiff", # basename of all plots
path = tempdir() # set directory for temporary files
)
file.remove(list.files(path = tempdir(),
pattern = "life_exp",
full.names = TRUE))
reveal_save(
plot_list, # list of plots
"life_exp.tiff"
)
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp)) +
geom_bin2d() # notice that now on the y axis, we've added another feature from the data and now "counts" is depicted by color.
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp )) +
geom_bin2d() +
scale_fill_viridis_c() + # this is a color-blind friendly color scale
facet_grid(rows = vars(continent),
scales="free_y")
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp )) +
geom_bin2d() +
scale_fill_viridis_c() +
facet_grid(rows = vars(continent),
scales="free") +
geom_density2d()
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp )) +
geom_bin2d() +
scale_fill_viridis_c() +
facet_grid(rows = vars(continent),
scales="free") +
geom_density2d(color = "red")
# Clue : you need to specify what comparisons you'd like to see:
myComparisons <- list(c("Africa", "Americas"),
c("Africa", "Asia"),
c("Africa", "Europe"),
c("Africa", "Oceania"),
c("Americas", "Asia"),
c("Americas", "Europe"),
c("Americas", "Oceania"),
c("Asia", "Europe"),
c("Asia", "Oceania"),
c("Europe", "Oceania"))
ggplot(data = gapminder,
aes(x = continent,
y = lifeExp,
color = continent)) +
geom_boxplot() +
geom_jitter(size = 0.1)+
stat_compare_means(method = "kruskal.test",
label.y = 15)+
stat_compare_means(comparisons = myComparisons,
label = "p.signif")
ggplot(data = gapminder,
aes(x = continent,
y = lifeExp,
color = continent)) +
geom_boxplot() +
geom_jitter(size = 0.1)+
stat_compare_means(method = "kruskal.test",
label.y = 15)+
stat_compare_means(comparisons = myComparisons,
label = "p.format")
packages_to_install <- c("tidyverse","gapminder","ggpubr","ggridges","ggreveal")
for (package in packages_to_install) {
if (!(package %in% rownames(installed.packages()))) {
install.packages(package, dependencies = TRUE)
print(paste("Installed package:", package))
} else {
print(paste(package, "is already installed"))
}
}
library(tidyverse)
library(gapminder)
library(ggpubr)
library(ggridges)
library(ggreveal)
theme_set(theme_bw()) # sets black and white theme for all plots generated in the document
theme_replace( # sets individual plot elements without overwriting theme
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14,
angle = 90,),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width)) +
geom_point(aes(color = Species))
ggplot(data = iris,
aes(x = Petal.Length)) +
geom_histogram(aes(fill = Species))
ggplot(data = iris,
aes(x = Petal.Length)) +
geom_histogram(
aes(fill = Species),
color = "black" # adds black outline to all bars
) -> iris_histo
iris_histo +
facet_grid(cols = vars(Species)) # with facet_grid we can choose whether to wrap in rows or columns
iris_histo +
facet_grid(rows = vars(Species)) # this wraps the data in rows
lapply(iris[,1:4], # use lapply to apply the shapiro.test function to multiple columns
function(x) shapiro.test(x)) -> normality_tests
# Print the results of normality tests. The results of the normality tests are stored in the normalityTests list, with variable names assigned using names().
names(normality_tests) <- colnames(iris[, 1:4])
print(normality_tests)
par(mfrow = c(2, 2))
hist(iris$Sepal.Length, main = "Sepal Length", xlab = "Length")
hist(iris$Sepal.Width, main = "Sepal Width", xlab = "Width")
hist(iris$Petal.Length, main = "Petal Length", xlab = "Length")
hist(iris$Petal.Width, main = "Petal Width", xlab = "Width")
iris %>%
pivot_longer(cols = 1:4, # select measurement columns
names_to = "measurement",# set column name for variables
values_to = "value") %>% # set column name for measurements
ggplot(aes(x = value,
y = measurement,
fill = Species)) +
geom_density_ridges(
alpha = 0.5, # set opacity of ridges
scale = 0.98 # set height scaling of ridges
) +
scale_x_continuous(name = "Measurement (cm)") +
scale_y_discrete(name = NULL,
labels = c("Petal.Length" = "Petal Length",
"Petal.Width" = "Petal Width",
"Sepal.Length" = "Sepal Length",
"Sepal.Width" = "Sepal Width"))
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp)) +
geom_bin2d(
bins = c(50,50) # vectors for number of horizontal and vertical bins
) +
scale_fill_viridis_c(
name = "Number of countries"
) + # uses a viridis scale which is easier to visualize
labs(x = "GDP per capita (USD)", # set x axis title
y = "Life expectancy (years)") + # set y axis title
theme(
legend.position = "top", # set legend position
legend.key.width = unit(2, "cm"), # set legend key width
legend.title.position = "top" # move legend title
)
shapiro.test(gapminder$lifeExp)
ggplot(data = gapminder,
aes(x = continent,
y = lifeExp,
color = continent)) +
geom_boxplot(outliers = FALSE) +
geom_jitter(width = 0.2,
alpha = 0.3) +
stat_compare_means(
method = "kruskal.test",
label.y = 90 # sets position of P value label
) +
guides( # guides allows us to finely manipulate legends
color = guide_legend( # we want to adjust the color legend
override.aes = aes(label = "") # remove the legend guide for the label
)
) +
scale_color_discrete(name = "Continent") +
labs(x = NULL,
y = "Life expectancy (years)") +
theme(
legend.position = "inside", # moves legend inside plot bounds
legend.position.inside = c(
0.9,0.3 # values from 0-1 that set legend hor. and ver. position
),
legend.background = element_rect( # set outline color of legend box
color = "black"
)
)
pairwise.wilcox.test(gapminder$lifeExp,
gapminder$continent,
p.adjust.method = "BH")
gapminder %>%
filter(year %in% c("1952","1962","1972","1982","1992","2002")) %>%
filter(
continent != "Oceania" # removing due to too few countries for density plotting
) %>%
ggplot(aes(x = lifeExp,
y = continent,
fill = as.factor(year))) +
geom_density_ridges(alpha = 0.5,
scale = 0.9) +
labs(x = "Life expectancy (years)",
y = "Continent") +
scale_fill_discrete(name = "Year") -> life_exp
reveal_aes(life_exp,
aes = "fill") -> plot_list
plot_list
reveal_save(
plot_list, # list of plots
"life_exp.tiff"
)
head(gapminder)
normality_tests <- lapply(gapminder[, 4:6], function(x) shapiro.test(x))
lapply(subset(gapminder, continent == "Europe")[,4:6], function(x) shapiro.test(x))
lapply(gapminder[,4:6], function(x) shapiro.test(x))
names(normality_tests) <- colnames(gapminder[, 4:6])
print(normality_tests)
head(diamonds)
names(diamonds)
ggplot(data = diamonds,
aes(x = price)) +
geom_histogram(aes(fill = cut),
color = "black") +
facet_grid(rows = vars(cut))
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp)) +
geom_bin2d() # notice that now on the y axis, we've added another feature from the data and now "counts" is depicted by color.
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp )) +
geom_bin2d() +
scale_fill_viridis_c() + # this is a color-blind friendly color scale
facet_grid(rows = vars(continent),
scales="free_y")
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp )) +
geom_bin2d() +
scale_fill_viridis_c() +
facet_grid(rows = vars(continent),
scales="free") +
geom_density2d(color = "red")
names(gapminder)
ggplot(data = gapminder,
aes(x = year,
y = lifeExp,
color = continent)) +
geom_jitter(width = 0.2,
alpha = 0.2) +
facet_grid(cols = vars(continent)) +
geom_violin(fill=NA) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1))
# Clue : you need to specify what comparisons you'd like to see:
myComparisons <- list(c("Africa", "Americas"),
c("Africa", "Asia"),
c("Africa", "Europe"),
c("Africa", "Oceania"),
c("Americas", "Asia"),
c("Americas", "Europe"),
c("Americas", "Oceania"),
c("Asia", "Europe"),
c("Asia", "Oceania"),
c("Europe", "Oceania"))
ggplot(data = gapminder,
aes(x = continent,
y = lifeExp,
color = continent)) +
geom_boxplot() +
geom_jitter(size = 0.1)+
stat_compare_means(method = "kruskal.test",
label.y = 15)+
stat_compare_means(comparisons = myComparisons,
label = "p.signif")
ggplot(data = gapminder,
aes(x = continent,
y = lifeExp,
color = continent)) +
geom_boxplot() +
geom_jitter(size = 0.1)+
stat_compare_means(method = "kruskal.test",
label.y = 15)+
stat_compare_means(comparisons = myComparisons,
label = "p.format")
packages_to_install <- c("tidyverse","gapminder","ggpubr","ggridges","ggreveal")
for (package in packages_to_install) {
if (!(package %in% rownames(installed.packages()))) {
install.packages(package, dependencies = TRUE)
print(paste("Installed package:", package))
} else {
print(paste(package, "is already installed"))
}
}
library(tidyverse)
library(gapminder)
library(ggpubr)
library(ggridges)
library(ggreveal)
theme_set(theme_bw()) # sets black and white theme for all plots generated in the document
theme_replace( # sets individual plot elements without overwriting theme
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14,
angle = 90,),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width)) +
geom_point(aes(color = Species))
ggplot(data = iris,
aes(x = Petal.Length)) +
geom_histogram(aes(fill = Species))
ggplot(data = iris,
aes(x = Petal.Length)) +
geom_histogram(
aes(fill = Species),
color = "black" # adds black outline to all bars
) -> iris_histo
iris_histo +
facet_grid(cols = vars(Species)) # with facet_grid we can choose whether to wrap in rows or columns
iris_histo +
facet_grid(rows = vars(Species)) # this wraps the data in rows
lapply(iris[,1:4], # use lapply to apply the shapiro.test function to multiple columns
function(x) shapiro.test(x)) -> normality_tests
# Print the results of normality tests. The results of the normality tests are stored in the normalityTests list, with variable names assigned using names().
names(normality_tests) <- colnames(iris[, 1:4])
print(normality_tests)
par(mfrow = c(2, 2))
hist(iris$Sepal.Length, main = "Sepal Length", xlab = "Length")
hist(iris$Sepal.Width, main = "Sepal Width", xlab = "Width")
hist(iris$Petal.Length, main = "Petal Length", xlab = "Length")
hist(iris$Petal.Width, main = "Petal Width", xlab = "Width")
iris %>%
pivot_longer(cols = 1:4, # select measurement columns
names_to = "measurement",# set column name for variables
values_to = "value") %>% # set column name for measurements
ggplot(aes(x = value,
y = measurement,
fill = Species)) +
geom_density_ridges(
alpha = 0.5, # set opacity of ridges
scale = 0.98 # set height scaling of ridges
) +
scale_x_continuous(name = "Measurement (cm)") +
scale_y_discrete(name = NULL,
labels = c("Petal.Length" = "Petal Length",
"Petal.Width" = "Petal Width",
"Sepal.Length" = "Sepal Length",
"Sepal.Width" = "Sepal Width"))
ggplot(data = gapminder,
aes(x = gdpPercap,
y = lifeExp)) +
geom_bin2d(
bins = c(50,50) # vectors for number of horizontal and vertical bins
) +
scale_fill_viridis_c(
name = "Number of countries"
) + # uses a viridis scale which is easier to visualize
labs(x = "GDP per capita (USD)", # set x axis title
y = "Life expectancy (years)") + # set y axis title
theme(
legend.position = "top", # set legend position
legend.key.width = unit(2, "cm"), # set legend key width
legend.title.position = "top" # move legend title
)
shapiro.test(gapminder$lifeExp)
ggplot(data = gapminder,
aes(x = continent,
y = lifeExp,
color = continent)) +
geom_boxplot(outliers = FALSE) +
geom_jitter(width = 0.2,
alpha = 0.3) +
stat_compare_means(
method = "kruskal.test",
label.y = 90 # sets position of P value label
) +
guides( # guides allows us to finely manipulate legends
color = guide_legend( # we want to adjust the color legend
override.aes = aes(label = "") # remove the legend guide for the label
)
) +
scale_color_discrete(name = "Continent") +
labs(x = NULL,
y = "Life expectancy (years)") +
theme(
legend.position = "inside", # moves legend inside plot bounds
legend.position.inside = c(
0.9,0.3 # values from 0-1 that set legend hor. and ver. position
),
legend.background = element_rect( # set outline color of legend box
color = "black"
)
)
pairwise.wilcox.test(gapminder$lifeExp,
gapminder$continent,
p.adjust.method = "BH")
gapminder %>%
filter(year %in% c("1952","1962","1972","1982","1992","2002")) %>%
filter(
continent != "Oceania" # removing due to too few countries for density plotting
) %>%
ggplot(aes(x = lifeExp,
y = continent,
fill = as.factor(year))) +
geom_density_ridges(alpha = 0.5,
scale = 0.9) +
labs(x = "Life expectancy (years)",
y = "Continent") +
scale_fill_discrete(name = "Year") -> life_exp
reveal_aes(life_exp,
aes = "fill") -> plot_list
plot_list
reveal_save(
plot_list, # list of plots
"life_exp.tiff"
)
