"1","<!-- KNITR_ASIS_OUTPUT_TOKEN -->
<!-- rnb-source-begin eyJkYXRhIjoiYGBgclxuYWxsRGYgJT4lXG4gIGZpbHRlcihpbmRleCAlaW4lIGNsdXN0ZXI0KSAlPiVcbiAgbXV0YXRlKGdlbiA9IGlmX2Vsc2UoZ2VudXMgJWluJSBnZW5JbnQsIHBhc3RlKFwiKlwiLGdlbnVzLFwiKlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VwID0gXCJcIiksIFwiT3RoZXJcIikpICU+JVxuICBtdXRhdGUodmlydXMuY2F0ID0gaWZfZWxzZSh2aXJ1cy5iaW4gPT0gMCwgXCJOZWdhdGl2ZVwiLCBcIlBvc2l0aXZlXCIpKSAlPiVcbiAgZ2dwbG90KCkgK1xuICBnZW9tX2NvbChhZXMoeCA9IGluZGV4LFxuICAgICAgICAgICAgICAgeSA9IHJlbF9hYixcbiAgICAgICAgICAgICAgIGZpbGwgPSBnZW4pLFxuICAgICAgICAgICBwb3NpdGlvbiA9IFwic3RhY2tcIikgK1xuICBzY2FsZV95X2NvbnRpbnVvdXMobmFtZSA9IFwiUmVsYXRpdmUgYWJ1bmRhbmNlICglKVwiLFxuICAgICAgICAgICAgICAgICAgICAgbGltaXRzID0gYygwLDEwNCksXG4gICAgICAgICAgICAgICAgICAgICBleHBhbmQgPSBjKDAsMCkpICtcbiAgc2NhbGVfZmlsbF9tYW51YWwobmFtZSA9IFwiR2VudXNcIixcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzID0gZ2VuQ29scykgK1xuICB0aGVtZShsZWdlbmQudGV4dCA9IGVsZW1lbnRfbWFya2Rvd24oKSxcbiAgICAgICAgcGFuZWwuZ3JpZC5tYWpvciA9IGVsZW1lbnRfYmxhbmsoKSxcbiAgICAgICAgcGFuZWwuZ3JpZC5taW5vciA9IGVsZW1lbnRfYmxhbmsoKSxcbiAgICAgICAgYXhpcy50aWNrcyA9IGVsZW1lbnRfYmxhbmsoKSxcbiAgICAgICAgYXhpcy50ZXh0LnggPSBlbGVtZW50X2JsYW5rKCksXG4gICAgICAgIGF4aXMudGl0bGUueCA9IGVsZW1lbnRfYmxhbmsoKSkgK1xuICBndWlkZXMoY29sb3IgPSBndWlkZV9sZWdlbmQob3ZlcnJpZGUuYWVzID0gbGlzdChzaXplID0gNikpKSAtPiBjbHVzdGVyNGJhclxuXG5jbHVzdGVyNGJhclxuXG5nZ3NhdmUocGxvdCA9IGNsdXN0ZXI0YmFyLFxuICAgICAgIFwiY2x1c3RlcjQudGF4YS5iYXIucGxvdC50aWZmXCIsXG4gICAgICAgaGVpZ2h0ID0gOCxcbiAgICAgICB3aWR0aCA9IDEwLFxuICAgICAgIHVuaXRzID0gYyhcImluXCIpKVxuXG5zaW5zcHVCcmF5UENvQU1ldGEgJT4lXG4gIGRwbHlyOjpzZWxlY3QoaW5kZXgsbW9zdC5hYikgJT4lXG4gIGxlZnRfam9pbiguLHNpbnNwdUZpbHRNZXRhKSAlPiVcbiAgZmlsdGVyKGs0ID09IDQpICU+JVxuICBjb3VudChtb3N0LmFiKSAlPiVcbiAgZ2dwbG90KGFlcyh4ID0gbW9zdC5hYixcbiAgICAgICAgICAgICB5ID0gbixcbiAgICAgICAgICAgICBmaWxsID0gbW9zdC5hYikpICtcbiAgZ2VvbV9jb2woKSArXG4gIGxhYnMoeCA9IFwiTW9zdCBhYnVuZGFudCBnZW5lcmFcXG5wZXIgc2FtcGxlXCIsXG4gICAgICAgeSA9IFwiTnVtYmVyIG9mIHNhbXBsZXNcIikgK1xuICBzY2FsZV9maWxsX21hbnVhbCh2YWx1ZXMgPSBnZW5Db2xzKSArXG4gIHRoZW1lKGF4aXMudGV4dC54ID0gZWxlbWVudF9tYXJrZG93bihhbmdsZSA9IDQ1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmp1c3QgPSAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGp1c3QgPSAxKSxcbiAgICAgICAgbGVnZW5kLnBvc2l0aW9uID0gXCJub25lXCIpIC0+IG1vc3RhYmNsdXN0ZXI0XG5cbm1vc3RhYmNsdXN0ZXI0XG5cbmdnc2F2ZShwbG90ID0gbW9zdGFiY2x1c3RlcjQsXG4gICAgICAgXCJtb3N0LmFidW5kYW50LmNsdXN0ZXIuNC50aWZmXCIsXG4gICAgICAgaGVpZ2h0ID0gOCxcbiAgICAgICB3aWR0aCA9IDEyLFxuICAgICAgIHVuaXRzID0gYyhcImluXCIpKVxuYGBgIn0= -->

```r
allDf %>%
  filter(index %in% cluster4) %>%
  mutate(gen = if_else(genus %in% genInt, paste(\"*\",genus,\"*\",
                                                sep = \"\"), \"Other\")) %>%
  mutate(virus.cat = if_else(virus.bin == 0, \"Negative\", \"Positive\")) %>%
  ggplot() +
  geom_col(aes(x = index,
               y = rel_ab,
               fill = gen),
           position = \"stack\") +
  scale_y_continuous(name = \"Relative abundance (%)\",
                     limits = c(0,104),
                     expand = c(0,0)) +
  scale_fill_manual(name = \"Genus\",
                    values = genCols) +
  theme(legend.text = element_markdown(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.ticks = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_blank()) +
  guides(color = guide_legend(override.aes = list(size = 6))) -> cluster4bar

cluster4bar

ggsave(plot = cluster4bar,
       \"cluster4.taxa.bar.plot.tiff\",
       height = 8,
       width = 10,
       units = c(\"in\"))

sinspuBrayPCoAMeta %>%
  dplyr::select(index,most.ab) %>%
  left_join(.,sinspuFiltMeta) %>%
  filter(k4 == 4) %>%
  count(most.ab) %>%
  ggplot(aes(x = most.ab,
             y = n,
             fill = most.ab)) +
  geom_col() +
  labs(x = \"Most abundant genera\nper sample\",
       y = \"Number of samples\") +
  scale_fill_manual(values = genCols) +
  theme(axis.text.x = element_markdown(angle = 45,
                                       vjust = 1,
                                       hjust = 1),
        legend.position = \"none\") -> mostabcluster4

mostabcluster4

ggsave(plot = mostabcluster4,
       \"most.abundant.cluster.4.tiff\",
       height = 8,
       width = 12,
       units = c(\"in\"))
```

<!-- rnb-source-end -->
<!-- KNITR_ASIS_OUTPUT_TOKEN -->"
"0","```r
allDf %>%
  filter(index %in% cluster4) %>%
  mutate(gen = if_else(genus %in% genInt, paste(\"*\",genus,\"*\",
                                                sep = \"\"), \"Other\")) %>%
  mutate(virus.cat = if_else(virus.bin == 0, \"Negative\", \"Positive\")) %>%
  ggplot() +
  geom_col(aes(x = index,
               y = rel_ab,
               fill = gen),
           position = \"stack\") +
  scale_y_continuous(name = \"Relative abundance (%)\",
                     limits = c(0,104),
                     expand = c(0,0)) +
  scale_fill_manual(name = \"Genus\",
                    values = genCols) +
  theme(legend.text = element_markdown(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.ticks = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_blank()) +
  guides(color = guide_legend(override.aes = list(size = 6))) -> cluster4bar

cluster4bar

ggsave(plot = cluster4bar,
       \"cluster4.taxa.bar.plot.tiff\",
       height = 8,
       width = 10,
       units = c(\"in\"))

sinspuBrayPCoAMeta %>%
  dplyr::select(index,most.ab) %>%
  left_join(.,sinspuFiltMeta) %>%
  filter(k4 == 4) %>%
  count(most.ab) %>%
  ggplot(aes(x = most.ab,
             y = n,
             fill = most.ab)) +
  geom_col() +
  labs(x = \"Most abundant genera\nper sample\",
       y = \"Number of samples\") +
  scale_fill_manual(values = genCols) +
  theme(axis.text.x = element_markdown(angle = 45,
                                       vjust = 1,
                                       hjust = 1),
        legend.position = \"none\") -> mostabcluster4

mostabcluster4

ggsave(plot = mostabcluster4,
       \"most.abundant.cluster.4.tiff\",
       height = 8,
       width = 12,
       units = c(\"in\"))
```"
