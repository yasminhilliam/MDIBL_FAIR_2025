"1","<!-- KNITR_ASIS_OUTPUT_TOKEN -->
<!-- rnb-source-begin eyJkYXRhIjoiYGBgclxucmVhZC5jc3YoXCJhbGwuc2FtcGxlLjE2Uy5jb3B5Lm51bWJlci5jc3ZcIikgLT4gY25cblxuY24kZGF0ZSA8LSBhcy5EYXRlKGNuJGRhdGUpXG5cbnJvdGhpYUFiICU+JVxuICBtdXRhdGUoc2FtcGxlbG9jID0gaW5kZXgsLmJlZm9yZSA9IGRhdGUpIC0+IHJvdGhpYUFiXG5cbmdzdWIoXCJHRVNDRlxcXFxkezJ9XyhcXFxcUyspX1xcXFxkK19cXFxcZCtfXFxcXGQrXCIsXCJcXFxcMVwiLHJvdGhpYUFiJHNhbXBsZWxvYykgLT4gcm90aGlhQWIkc2FtcGxlbG9jXG5cbmxlZnRfam9pbihyb3RoaWFBYixjbixcbiAgICAgICAgICBieSA9IGMoXCJwYXRpZW50aWRcIixcInNhbXBsZWxvY1wiLFwiZGF0ZVwiKSkgJT4lXG4gIG11dGF0ZShyb3RoaWEuYWIgPSAobWVhbl9jbiAqIChyZWxfYWIvMTApKS8zKSAtPiByb3RoaWFBYlxuXG5sbWVyKGRhdGEgPSByb3RoaWFBYiwgcm90aGlhLmFiIH4gdmlydXMuYmluICsgc2FtcGxlbG9jICsgKDEgfCBwYXRpZW50aWQpKSAtPiByb3RoaWFBYkxtXG5cbnN1bW1hcnkocm90aGlhQWJMbSkgIFxuXG5nZ3Bsb3QoZGF0YSA9IHJvdGhpYUFiLFxuICAgICAgIGFlcyh4ID0gdmlydXMuYmluLFxuICAgICAgICAgICB5ID0gcm90aGlhLmFiLFxuICAgICAgICAgICBjb2xvciA9IHZpcnVzLmJpbikpICtcbiAgZ2VvbV92aW9saW4oZHJhd19xdWFudGlsZXMgPSBjKDAuNSkpICtcbiAgZ2VvbV9qaXR0ZXIod2lkdGggPSAwLjIpICtcbiAgc2NhbGVfeV9sb2cxMCgpICtcbiAgZmFjZXRfd3JhcCh+c2FtcGxlbG9jKVxuXG5nZ3Bsb3QoZGF0YSA9IHJvdGhpYUFiLFxuICAgICAgIGFlcyh4ID0gdmlydXMuYmluLFxuICAgICAgICAgICB5ID0gbWVhbl9jbixcbiAgICAgICAgICAgY29sb3IgPSB2aXJ1cy5iaW4pKSArXG4gIGdlb21fdmlvbGluKGRyYXdfcXVhbnRpbGVzID0gYygwLjUpKSArXG4gIHNjYWxlX3lfbG9nMTAoKSArXG4gIGZhY2V0X3dyYXAofnNhbXBsZWxvYylcblxubGVmdF9qb2luKGN5dG9raW5lTWV0YSxtZXRhYm9sb25NZXRhKSAtPiBjeXRvbWV0YWxNZXRhXG5cbmlubmVyX2pvaW4ocm90aGlhQWIsY3l0b21ldGFsTWV0YSkgLT4gcm90aGlhY3l0b21ldGFsXG5cbiMgRGVmaW5lIHRoZSBwYXRpZW50aWQgYXMgdGhlIHJhbmRvbSBlZmZlY3QgdmFyaWFibGVcbnBhdGllbnRpZGZvcm11bGEgPC0gXCIoMSB8IHBhdGllbnRpZClcIlxuXG4jIEluaXRpYWxpemUgYSBsaXN0IHRvIHN0b3JlIHRoZSBtb2RlbHNcbnJvdGhpYWFibW9kZWxzIDwtIGxpc3QoKVxuXG4jIEl0ZXJhdGUgdGhyb3VnaCBjb2x1bW5zIG9mIHRoZSBkYXRhZnJhbWUgZXhjZXB0IGZvciB0aGUgXCJwYXRpZW50aWRcIiBjb2x1bW5cbmZvciAocmVzcG9uc2UgaW4gbmFtZXMocm90aGlhY3l0b21ldGFsKVsxMDpsZW5ndGgobmFtZXMocm90aGlhY3l0b21ldGFsKSldKSB7ICAjIEV4Y2x1ZGUgdGhlIGZpcnN0IGNvbHVtbiAoXCJwYXRpZW50aWRcIilcbiAgICBmaXhlZGVmZmVjdHMgPC0gXCJ2aXJ1cy5iaW5cIlxuICBcbiAgICBmb3JtdWxhIDwtIGFzLmZvcm11bGEocGFzdGUocmVzcG9uc2UsIFwiflwiLCBmaXhlZGVmZmVjdHMsXCIrXCIsIHBhdGllbnRpZGZvcm11bGEpKVxuICBcbiAgICAjIEZpdCB0aGUgbGluZWFyIG1peGVkLWVmZmVjdHMgbW9kZWxcbiAgICBtb2RlbCA8LSBsbWVyKGZvcm11bGEsIGRhdGEgPSByb3RoaWFjeXRvbWV0YWwpXG4gIFxuICAgICMgU3RvcmUgdGhlIG1vZGVsIGluIHRoZSBsaXN0IHVzaW5nIHRoZSByZXNwb25zZSB2YXJpYWJsZSBuYW1lXG4gICAgcm90aGlhYWJtb2RlbHNbW3Jlc3BvbnNlXV0gPC0gbW9kZWxcbiAgXG4gICAgIyBPcHRpb25hbDogUHJpbnQgdGhlIHN1bW1hcnkgb2YgdGhlIG1vZGVsXG4gICAgcHJpbnQocGFzdGUoXCJNb2RlbCBmb3I6XCIsIHJlc3BvbnNlKSlcbiAgICBwcmludChzdW1tYXJ5KG1vZGVsKSlcbn1cblxuXG5yb3RoaWFjeXRvbWV0YWwgJT4lXG4gIGRwbHlyOjpzZWxlY3QoaW5kZXgsdmlydXMuYmluLHJvdGhpYS5hYixJRk5CKSAlPiVcbiAgZ2dwbG90KGFlcyh4ID0gSUZOQixcbiAgICAgICAgICAgICB5ID0gcm90aGlhLmFiLFxuICAgICAgICAgICAgIHNoYXBlID0gdmlydXMuYmluLFxuICAgICAgICAgICAgIGNvbG9yID0gdmlydXMuYmluKSkgK1xuICBnZW9tX3Ntb290aChtZXRob2QgPSBcImxtXCIpICtcbiAgZ2VvbV9wb2ludCgpICtcbiAgc2NhbGVfeV9sb2cxMCgpXG5gYGAifQ== -->

```r
read.csv(\"all.sample.16S.copy.number.csv\") -> cn

cn$date <- as.Date(cn$date)

rothiaAb %>%
  mutate(sampleloc = index,.before = date) -> rothiaAb

gsub(\"GESCF\\d{2}_(\\S+)_\\d+_\\d+_\\d+\",\"\\1\",rothiaAb$sampleloc) -> rothiaAb$sampleloc

left_join(rothiaAb,cn,
          by = c(\"patientid\",\"sampleloc\",\"date\")) %>%
  mutate(rothia.ab = (mean_cn * (rel_ab/10))/3) -> rothiaAb

lmer(data = rothiaAb, rothia.ab ~ virus.bin + sampleloc + (1 | patientid)) -> rothiaAbLm

summary(rothiaAbLm)  

ggplot(data = rothiaAb,
       aes(x = virus.bin,
           y = rothia.ab,
           color = virus.bin)) +
  geom_violin(draw_quantiles = c(0.5)) +
  geom_jitter(width = 0.2) +
  scale_y_log10() +
  facet_wrap(~sampleloc)

ggplot(data = rothiaAb,
       aes(x = virus.bin,
           y = mean_cn,
           color = virus.bin)) +
  geom_violin(draw_quantiles = c(0.5)) +
  scale_y_log10() +
  facet_wrap(~sampleloc)

left_join(cytokineMeta,metabolonMeta) -> cytometalMeta

inner_join(rothiaAb,cytometalMeta) -> rothiacytometal

# Define the patientid as the random effect variable
patientidformula <- \"(1 | patientid)\"

# Initialize a list to store the models
rothiaabmodels <- list()

# Iterate through columns of the dataframe except for the \"patientid\" column
for (response in names(rothiacytometal)[10:length(names(rothiacytometal))]) {  # Exclude the first column (\"patientid\")
    fixedeffects <- \"virus.bin\"
  
    formula <- as.formula(paste(response, \"~\", fixedeffects,\"+\", patientidformula))
  
    # Fit the linear mixed-effects model
    model <- lmer(formula, data = rothiacytometal)
  
    # Store the model in the list using the response variable name
    rothiaabmodels[[response]] <- model
  
    # Optional: Print the summary of the model
    print(paste(\"Model for:\", response))
    print(summary(model))
}


rothiacytometal %>%
  dplyr::select(index,virus.bin,rothia.ab,IFNB) %>%
  ggplot(aes(x = IFNB,
             y = rothia.ab,
             shape = virus.bin,
             color = virus.bin)) +
  geom_smooth(method = \"lm\") +
  geom_point() +
  scale_y_log10()
```

<!-- rnb-source-end -->
<!-- KNITR_ASIS_OUTPUT_TOKEN -->"
"0","```r
read.csv(\"all.sample.16S.copy.number.csv\") -> cn

cn$date <- as.Date(cn$date)

rothiaAb %>%
  mutate(sampleloc = index,.before = date) -> rothiaAb

gsub(\"GESCF\\d{2}_(\\S+)_\\d+_\\d+_\\d+\",\"\\1\",rothiaAb$sampleloc) -> rothiaAb$sampleloc

left_join(rothiaAb,cn,
          by = c(\"patientid\",\"sampleloc\",\"date\")) %>%
  mutate(rothia.ab = (mean_cn * (rel_ab/10))/3) -> rothiaAb

lmer(data = rothiaAb, rothia.ab ~ virus.bin + sampleloc + (1 | patientid)) -> rothiaAbLm

summary(rothiaAbLm)  

ggplot(data = rothiaAb,
       aes(x = virus.bin,
           y = rothia.ab,
           color = virus.bin)) +
  geom_violin(draw_quantiles = c(0.5)) +
  geom_jitter(width = 0.2) +
  scale_y_log10() +
  facet_wrap(~sampleloc)

ggplot(data = rothiaAb,
       aes(x = virus.bin,
           y = mean_cn,
           color = virus.bin)) +
  geom_violin(draw_quantiles = c(0.5)) +
  scale_y_log10() +
  facet_wrap(~sampleloc)

left_join(cytokineMeta,metabolonMeta) -> cytometalMeta

inner_join(rothiaAb,cytometalMeta) -> rothiacytometal

# Define the patientid as the random effect variable
patientidformula <- \"(1 | patientid)\"

# Initialize a list to store the models
rothiaabmodels <- list()

# Iterate through columns of the dataframe except for the \"patientid\" column
for (response in names(rothiacytometal)[10:length(names(rothiacytometal))]) {  # Exclude the first column (\"patientid\")
    fixedeffects <- \"virus.bin\"
  
    formula <- as.formula(paste(response, \"~\", fixedeffects,\"+\", patientidformula))
  
    # Fit the linear mixed-effects model
    model <- lmer(formula, data = rothiacytometal)
  
    # Store the model in the list using the response variable name
    rothiaabmodels[[response]] <- model
  
    # Optional: Print the summary of the model
    print(paste(\"Model for:\", response))
    print(summary(model))
}


rothiacytometal %>%
  dplyr::select(index,virus.bin,rothia.ab,IFNB) %>%
  ggplot(aes(x = IFNB,
             y = rothia.ab,
             shape = virus.bin,
             color = virus.bin)) +
  geom_smooth(method = \"lm\") +
  geom_point() +
  scale_y_log10()
```"
