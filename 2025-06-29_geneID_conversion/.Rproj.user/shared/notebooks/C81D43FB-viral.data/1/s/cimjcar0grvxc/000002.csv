"1","<!-- KNITR_ASIS_OUTPUT_TOKEN -->
<!-- rnb-source-begin eyJkYXRhIjoiYGBgclxuYXMuZGF0YS5mcmFtZSh2aXJ1c0NvbWIgJT4lXG4gICAgICAgICAgICAgICAgdW5ncm91cCgpICU+JVxuICAgICAgICAgICAgICAgIGRwbHlyOjpzZWxlY3QoT1RVLGtpbmdkb20scGh5bHVtLGNsYXNzLG9yZGVyLGZhbWlseSxnZW51cykgJT4lXG4gICAgICAgICAgICAgICAgZGlzdGluY3QoKSkgLT4gY29tYlRheFRpZHlcblxuIyBzb21lIGR1cGxpY2F0ZSBPVFVzIHdpdGggbWlzbWF0Y2hlZCBuYW1lcyBpbiBHbGVubidzIGRhdGEgLSBmaXhcbiAgXG5jb21iVGF4VGlkeSAlPiVcbiAgbXV0YXRlKGdlbnVzID0gY2FzZV93aGVuKE9UVSA9PSBcIjQ4YzVlMjIyZjM1N2IzOWRlMzk2Y2RhODZkMmFiYjdiXCIgfiBcIkJyYWR5cmhpem9iaXVtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBPVFUgPT0gXCIxNWM4MjRmODNkZTg0OWY3YTlmNGNkMTU1ZTEwNGJlZVwiIH4gXCJBcnRocm9iYWN0ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIE9UVSA9PSBcImM4OTE2MTg4ZTc3NTY4NzJhOWI4MTdkZTM4M2ZmMTk4XCIgfiBcIkV1YmFjdGVyaXVtbm9kYXR1Z3JvdXBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFRSVUUgfiBnZW51cykpICU+JVxuICBkaXN0aW5jdCgpICU+JSBcbiAgY29sdW1uX3RvX3Jvd25hbWVzKFwiT1RVXCIpIC0+IGNvbWJUYXhUaWR5XG5cbmFzLm1hdHJpeChjb21iVGF4VGlkeSkgLT4gY29tYlRheFRpZHlcblxudGF4X3RhYmxlKGNvbWJUYXhUaWR5KSAtPiB0YXhhLnRhYmxlXG5cbmFzLmRhdGEuZnJhbWUodmlydXNDb21iICU+JVxuICAgICAgICAgICAgICAgIGRwbHlyOjpzZWxlY3QoT1RVLGluZGV4LEFidW5kYW5jZSkgJT4lXG4gICAgICAgICAgICAgICAgcGl2b3Rfd2lkZXIobmFtZXNfZnJvbSA9IGluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlc19mcm9tID0gQWJ1bmRhbmNlKSAlPiVcbiAgICAgICAgICAgICAgICBjb2x1bW5fdG9fcm93bmFtZXMoXCJPVFVcIilcbiAgICAgICAgICAgICAgKSAtPiBjb21iQVNWVGlkeVxuXG5jb21iQVNWVGlkeVtpcy5uYShjb21iQVNWVGlkeSldIDwtIDBcblxub3R1X3RhYmxlKGNvbWJBU1ZUaWR5LFxuICAgICAgICAgIHRheGFfYXJlX3Jvd3MgPSBUUlVFKSAtPiBvdHUudGFibGVcblxuYXMuZGF0YS5mcmFtZSh2aXJ1c0NvbWIgJT4lXG4gICAgICAgICAgICAgICAgdW5ncm91cCgpICU+JVxuICAgICAgICAgICAgICAgIGRwbHlyOjpzZWxlY3QoaW5kZXgscGF0aWVudGlkLHNhbXBsZWxvYyxkYXRlLHZpc2l0LHZpcnVzLmJpbix2aXJ1cyx2aXJ1c18yKSAlPiVcbiAgICAgICAgICAgICAgICBkaXN0aW5jdCgpICU+JVxuICAgICAgICAgICAgICAgIG11dGF0ZShpbmRleDEgPSBpbmRleCkgJT4lXG4gICAgICAgICAgICAgICAgY29sdW1uX3RvX3Jvd25hbWVzKFwiaW5kZXgxXCIpXG4gICAgICAgICAgICAgICAgKSAtPiBjb21iU2FtcFRpZHlcblxuc2FtcGxlX2RhdGEoY29tYlNhbXBUaWR5KSAtPiBzYW1wbGUuZGF0YVxuXG5tZXJnZV9waHlsb3NlcSh0YXhhLnRhYmxlLG90dS50YWJsZSxzYW1wbGUuZGF0YSkgLT4gY29tYlBzXG5cbnNhbXBsZV9kYXRhKGNvbWJQcylcbmNvbWJQc1xuYGBgIn0= -->

```r
as.data.frame(virusComb %>%
                ungroup() %>%
                dplyr::select(OTU,kingdom,phylum,class,order,family,genus) %>%
                distinct()) -> combTaxTidy

# some duplicate OTUs with mismatched names in Glenn's data - fix
  
combTaxTidy %>%
  mutate(genus = case_when(OTU == \"48c5e222f357b39de396cda86d2abb7b\" ~ \"Bradyrhizobium\",
                           OTU == \"15c824f83de849f7a9f4cd155e104bee\" ~ \"Arthrobacter\",
                           OTU == \"c8916188e7756872a9b817de383ff198\" ~ \"Eubacteriumnodatugroup\",
                           TRUE ~ genus)) %>%
  distinct() %>% 
  column_to_rownames(\"OTU\") -> combTaxTidy

as.matrix(combTaxTidy) -> combTaxTidy

tax_table(combTaxTidy) -> taxa.table

as.data.frame(virusComb %>%
                dplyr::select(OTU,index,Abundance) %>%
                pivot_wider(names_from = index,
                            values_from = Abundance) %>%
                column_to_rownames(\"OTU\")
              ) -> combASVTidy

combASVTidy[is.na(combASVTidy)] <- 0

otu_table(combASVTidy,
          taxa_are_rows = TRUE) -> otu.table

as.data.frame(virusComb %>%
                ungroup() %>%
                dplyr::select(index,patientid,sampleloc,date,visit,virus.bin,virus,virus_2) %>%
                distinct() %>%
                mutate(index1 = index) %>%
                column_to_rownames(\"index1\")
                ) -> combSampTidy

sample_data(combSampTidy) -> sample.data

merge_phyloseq(taxa.table,otu.table,sample.data) -> combPs

sample_data(combPs)
combPs
```

<!-- rnb-source-end -->
<!-- KNITR_ASIS_OUTPUT_TOKEN -->"
"0","```r
as.data.frame(virusComb %>%
                ungroup() %>%
                dplyr::select(OTU,kingdom,phylum,class,order,family,genus) %>%
                distinct()) -> combTaxTidy

# some duplicate OTUs with mismatched names in Glenn's data - fix
  
combTaxTidy %>%
  mutate(genus = case_when(OTU == \"48c5e222f357b39de396cda86d2abb7b\" ~ \"Bradyrhizobium\",
                           OTU == \"15c824f83de849f7a9f4cd155e104bee\" ~ \"Arthrobacter\",
                           OTU == \"c8916188e7756872a9b817de383ff198\" ~ \"Eubacteriumnodatugroup\",
                           TRUE ~ genus)) %>%
  distinct() %>% 
  column_to_rownames(\"OTU\") -> combTaxTidy

as.matrix(combTaxTidy) -> combTaxTidy

tax_table(combTaxTidy) -> taxa.table

as.data.frame(virusComb %>%
                dplyr::select(OTU,index,Abundance) %>%
                pivot_wider(names_from = index,
                            values_from = Abundance) %>%
                column_to_rownames(\"OTU\")
              ) -> combASVTidy

combASVTidy[is.na(combASVTidy)] <- 0

otu_table(combASVTidy,
          taxa_are_rows = TRUE) -> otu.table

as.data.frame(virusComb %>%
                ungroup() %>%
                dplyr::select(index,patientid,sampleloc,date,visit,virus.bin,virus,virus_2) %>%
                distinct() %>%
                mutate(index1 = index) %>%
                column_to_rownames(\"index1\")
                ) -> combSampTidy

sample_data(combSampTidy) -> sample.data

merge_phyloseq(taxa.table,otu.table,sample.data) -> combPs

sample_data(combPs)
combPs
```"
