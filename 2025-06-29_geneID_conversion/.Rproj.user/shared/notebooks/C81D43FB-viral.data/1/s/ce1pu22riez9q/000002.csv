"1","<!-- KNITR_ASIS_OUTPUT_TOKEN -->
<!-- rnb-source-begin eyJkYXRhIjoiYGBgclxuYWxsRGYgJT4lXG4gIGRwbHlyOjpzZWxlY3QoaW5kZXgsc2FtcGxlbG9jLHZpcnVzLmJpbixPVFUsQWJ1bmRhbmNlKSAlPiVcbiAgZmlsdGVyKCFpcy5uYSh2aXJ1cy5iaW4pKSAlPiVcbiAgZ3JvdXBfYnkoaW5kZXgpICU+JVxuICBzdW1tYXJpc2UoTiA9IHN1bShBYnVuZGFuY2UpKSAlPiVcbiAgYXJyYW5nZShOKSAlPiVcbiAgcHJpbnQobiA9IDIwKSAjIGlkZW50aWZ5IG1pbmltdW0gbnVtYmVyIG9mIHJlYWRzIGZyb20gYSBzYW1wbGUgdG8gYmUgaW5jbHVkZWRcblxuIyB0aHJlc2hvbGQgd2hlcmUgeW91IG1lZXQgc29tZSBraW5kIG9mIFwiY3JpdGljYWwgbWFzc1wiIG9mIHNlcXVlbmNlc1xuIyBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PXh5dWZpek9wYzVJXG5cbmFsbERmICU+JVxuICBkcGx5cjo6c2VsZWN0KGluZGV4LHNhbXBsZWxvYyx2aXJ1cy5iaW4sT1RVLEFidW5kYW5jZSkgJT4lXG4gIGZpbHRlcighaXMubmEodmlydXMuYmluKSkgJT4lXG4gIGdyb3VwX2J5KGluZGV4KSAlPiUgXG4gIG11dGF0ZShOID0gc3VtKEFidW5kYW5jZSkpICU+JVxuICB1bmdyb3VwKCkgJT4lXG4gIGZpbHRlcihOID49IDEwNDUpICU+JVxuICBkcGx5cjo6c2VsZWN0KC1OKSAlPiVcbiAgcGl2b3Rfd2lkZXIobmFtZXNfZnJvbSA9IFwiT1RVXCIsXG4gICAgICAgICAgICAgIHZhbHVlc19mcm9tID0gXCJBYnVuZGFuY2VcIixcbiAgICAgICAgICAgICAgdmFsdWVzX2ZpbGwgPSAwKSAtPiBzaW5zcHVGaWx0XG5cbnNpbnNwdUZpbHQgJT4lXG4gIGRwbHlyOjpzZWxlY3QoaW5kZXgsc2FtcGxlbG9jLHZpcnVzLmJpbikgLT4gc2luc3B1RmlsdE1ldGFcblxuc2luc3B1RmlsdCAlPiVcbiAgZHBseXI6OnNlbGVjdCgtc2FtcGxlbG9jLC12aXJ1cy5iaW4pICU+JVxuICBjb2x1bW5fdG9fcm93bmFtZXMoXCJpbmRleFwiKSAlPiVcbiAgYXZnZGlzdChzYW1wbGUgPSAxMDQ1LFxuICAgICAgICAgIGRtZXRob2QgPSBcImhvcm5cIikgLT4gc2luc3B1RGlzdFxuXG53Y21kc2NhbGUoc2luc3B1RGlzdCxcbiAgICAgICAgICBlaWcgPSBUUlVFKSAtPiBzaW5zcHVQQ29BXG5cbm9yZGlwbG90KHNpbnNwdVBDb0EpXG5cbnNpbnNwdVBDb0EgJT4lXG4gIHNjb3JlcygpICU+JVxuICBhc190aWJibGUocm93bmFtZXMgPSBcImluZGV4XCIpICU+JVxuICBkcGx5cjo6c2VsZWN0KGluZGV4LERpbTEsRGltMikgLT4gc2luc3B1SG9yblBDb0FcblxuaW5uZXJfam9pbihzaW5zcHVGaWx0TWV0YSxzaW5zcHVIb3JuUENvQSkgLT4gc2luc3B1UENvQU1ldGFcbmBgYCJ9 -->

```r
allDf %>%
  dplyr::select(index,sampleloc,virus.bin,OTU,Abundance) %>%
  filter(!is.na(virus.bin)) %>%
  group_by(index) %>%
  summarise(N = sum(Abundance)) %>%
  arrange(N) %>%
  print(n = 20) # identify minimum number of reads from a sample to be included

# threshold where you meet some kind of \"critical mass\" of sequences
# https://www.youtube.com/watch?v=xyufizOpc5I

allDf %>%
  dplyr::select(index,sampleloc,virus.bin,OTU,Abundance) %>%
  filter(!is.na(virus.bin)) %>%
  group_by(index) %>% 
  mutate(N = sum(Abundance)) %>%
  ungroup() %>%
  filter(N >= 1045) %>%
  dplyr::select(-N) %>%
  pivot_wider(names_from = \"OTU\",
              values_from = \"Abundance\",
              values_fill = 0) -> sinspuFilt

sinspuFilt %>%
  dplyr::select(index,sampleloc,virus.bin) -> sinspuFiltMeta

sinspuFilt %>%
  dplyr::select(-sampleloc,-virus.bin) %>%
  column_to_rownames(\"index\") %>%
  avgdist(sample = 1045,
          dmethod = \"horn\") -> sinspuDist

wcmdscale(sinspuDist,
          eig = TRUE) -> sinspuPCoA

ordiplot(sinspuPCoA)

sinspuPCoA %>%
  scores() %>%
  as_tibble(rownames = \"index\") %>%
  dplyr::select(index,Dim1,Dim2) -> sinspuHornPCoA

inner_join(sinspuFiltMeta,sinspuHornPCoA) -> sinspuPCoAMeta
```

<!-- rnb-source-end -->
<!-- KNITR_ASIS_OUTPUT_TOKEN -->"
"0","```r
allDf %>%
  dplyr::select(index,sampleloc,virus.bin,OTU,Abundance) %>%
  filter(!is.na(virus.bin)) %>%
  group_by(index) %>%
  summarise(N = sum(Abundance)) %>%
  arrange(N) %>%
  print(n = 20) # identify minimum number of reads from a sample to be included

# threshold where you meet some kind of \"critical mass\" of sequences
# https://www.youtube.com/watch?v=xyufizOpc5I

allDf %>%
  dplyr::select(index,sampleloc,virus.bin,OTU,Abundance) %>%
  filter(!is.na(virus.bin)) %>%
  group_by(index) %>% 
  mutate(N = sum(Abundance)) %>%
  ungroup() %>%
  filter(N >= 1045) %>%
  dplyr::select(-N) %>%
  pivot_wider(names_from = \"OTU\",
              values_from = \"Abundance\",
              values_fill = 0) -> sinspuFilt

sinspuFilt %>%
  dplyr::select(index,sampleloc,virus.bin) -> sinspuFiltMeta

sinspuFilt %>%
  dplyr::select(-sampleloc,-virus.bin) %>%
  column_to_rownames(\"index\") %>%
  avgdist(sample = 1045,
          dmethod = \"horn\") -> sinspuDist

wcmdscale(sinspuDist,
          eig = TRUE) -> sinspuPCoA

ordiplot(sinspuPCoA)

sinspuPCoA %>%
  scores() %>%
  as_tibble(rownames = \"index\") %>%
  dplyr::select(index,Dim1,Dim2) -> sinspuHornPCoA

inner_join(sinspuFiltMeta,sinspuHornPCoA) -> sinspuPCoAMeta
```"
