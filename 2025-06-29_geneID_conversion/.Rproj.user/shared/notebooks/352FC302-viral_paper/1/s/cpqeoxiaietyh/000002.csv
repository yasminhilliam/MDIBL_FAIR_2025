"1","<!-- KNITR_ASIS_OUTPUT_TOKEN -->
<!-- rnb-source-begin eyJkYXRhIjoiYGBgclxuYWxsRGYgJT4lXG4gIGRwbHlyOjpzZWxlY3QoaW5kZXgsc2FtcGxlbG9jLHZpcnVzLmJpbixPVFUsQWJ1bmRhbmNlKSAlPiVcbiAgZmlsdGVyKCFpcy5uYSh2aXJ1cy5iaW4pKSAlPiVcbiAgZ3JvdXBfYnkoaW5kZXgpICU+JSBcbiAgbXV0YXRlKE4gPSBzdW0oQWJ1bmRhbmNlKSkgJT4lXG4gIHVuZ3JvdXAoKSAlPiVcbiAgZmlsdGVyKE4gPj0gMTA0NSkgJT4lXG4gIC4kaW5kZXggLT4gc2luc3B1IFxuXG5hbGxEZiAlPiVcbiAgZmlsdGVyKGluZGV4ICVpbiUgc2luc3B1KSAlPiVcbiAgbXV0YXRlKGdlbnVzID0gaWZfZWxzZShnZW51cyAlaW4lIGMoXCJBY2hyb21vYmFjdGVyXCIsXCJDb3J5bmViYWN0ZXJpdW1cIixcIlBzZXVkb21vbmFzXCIsXCJSb3RoaWFcIixcIlN0YXBoeWxvY29jY3VzXCIsXCJTdHJlcHRvY29jY3VzXCIpLHBhc3RlKFwiKlwiLGdlbnVzLFwiKlwiLHNlcCA9IFwiXCIpLFwiT3RoZXJcIikpICU+JVxuICBnZ3Bsb3QoYWVzKHggPSBpbmRleCxcbiAgICAgICAgICAgICB5ID0gcmVsX2FiLFxuICAgICAgICAgICAgIGZpbGwgPSBnZW51cykpICtcbiAgZ2VvbV9jb2wocG9zaXRpb24gPSBcInN0YWNrXCIpICtcbiAgZ2VvbV9zZWdtZW50KGFlcyh4ID0gaW5kZXgsXG4gICAgICAgICAgICAgICAgICAgeSA9IDEwMSxcbiAgICAgICAgICAgICAgICAgICB5ZW5kID0gMTEwLFxuICAgICAgICAgICAgICAgICAgIGNvbG9yID0gc2FtcGxlbG9jKSxcbiAgICAgICAgICAgICAgIGxpbmV3aWR0aCA9IDEpICtcbiAgc2NhbGVfZmlsbF9tYW51YWwobmFtZSA9IFwiR2VudXNcIixcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzID0gZ2VuY29scykgK1xuICBzY2FsZV9jb2xvcl9tYW51YWwobmFtZSA9IFwiU2FtcGxlIHNpdGVcIixcbiAgICAgICAgICAgICAgICAgICAgIHZhbHVlcyA9IGxvY2NvbHMsXG4gICAgICAgICAgICAgICAgICAgICBsYWJlbHMgPSBjKFwiU2ludXMgKG4gPSAxMjgpXCIsXCJTcHV0dW0gKG4gPSA3NClcIikpICtcbiAgbGVnZW5kcnk6OnNjYWxlX3hfZGVuZHJvKGNsdXN0ID0gc2luc3B1Q2x1c3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IFwidG9wXCIpICtcbiAgc2NhbGVfeV9jb250aW51b3VzKG5hbWUgPSBcIlJlbGF0aXZlIGFidW5kYW5jZSAoJSlcIixcbiAgICAgICAgICAgICAgICAgICAgIGJyZWFrcyA9IGMoMCwyMCw0MCw2MCw4MCwxMDApKSArXG4gIHRoZW1lKGF4aXMudGV4dC54ID0gZWxlbWVudF9ibGFuaygpLFxuICAgICAgICBsZWdlbmQudGV4dCA9IGVsZW1lbnRfbWFya2Rvd24oKSxcbiAgICAgICAgcGFuZWwuZ3JpZCA9IGVsZW1lbnRfYmxhbmsoKSxcbiAgICAgICAgYXhpcy50aXRsZS54ID0gZWxlbWVudF9ibGFuaygpKSArXG4gIGd1aWRlcyhjb2xvciA9IGd1aWRlX2xlZ2VuZChvdmVycmlkZS5hZXMgPSBsaXN0KGxpbmV3aWR0aCA9IDcpKSkgLT4gYWR1bHRiYXJwbG90XG5cbmdnc2F2ZShwbG90ID0gYWR1bHRiYXJwbG90LFxuICAgICAgIFwiYWR1bHRfcmVsX2FiX2JhcnBsb3Rfc2FtcGxlbG9jLnBkZlwiLFxuICAgICAgIGhlaWdodCA9IDgsXG4gICAgICAgd2lkdGggPSAxMixcbiAgICAgICB1bml0cyA9YyAoXCJpblwiKSlcblxuYWxsRGYgJT4lXG4gIGZpbHRlcihpbmRleCAlaW4lIHNpbnNwdSkgJT4lXG4gIG11dGF0ZShnZW51cyA9IGlmX2Vsc2UoZ2VudXMgJWluJSBjKFwiQWNocm9tb2JhY3RlclwiLFwiQ29yeW5lYmFjdGVyaXVtXCIsXCJQc2V1ZG9tb25hc1wiLFwiUm90aGlhXCIsXCJTdGFwaHlsb2NvY2N1c1wiLFwiU3RyZXB0b2NvY2N1c1wiKSxwYXN0ZShcIipcIixnZW51cyxcIipcIixzZXAgPSBcIlwiKSxcIk90aGVyXCIpKSAlPiVcbiAgZ2dwbG90KGFlcyh4ID0gaW5kZXgsXG4gICAgICAgICAgICAgeSA9IHJlbF9hYixcbiAgICAgICAgICAgICBmaWxsID0gZ2VudXMsXG4gICAgICAgICAgICAgZ3JvdXAgPSB2aXJ1cy5iaW4pKSArXG4gIGdlb21fY29sKHBvc2l0aW9uID0gXCJzdGFja1wiKSArXG4gIGdlb21fc2VnbWVudChhZXMoeCA9IGluZGV4LFxuICAgICAgICAgICAgICAgICAgIHkgPSAxMDEsXG4gICAgICAgICAgICAgICAgICAgeWVuZCA9IDExMCxcbiAgICAgICAgICAgICAgICAgICBjb2xvciA9IHZpcnVzLmJpbiksXG4gICAgICAgICAgICAgICBsaW5ld2lkdGggPSAxKSArXG4gIHNjYWxlX2ZpbGxfbWFudWFsKG5hbWUgPSBcIkdlbnVzXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlcyA9IGdlbmNvbHMpICtcbiAgc2NhbGVfY29sb3JfbWFudWFsKG5hbWUgPSBcIlNhbXBsZSB2aXJhbCBzdGF0dXNcIixcbiAgICAgICAgICAgICAgICAgICAgIHZhbHVlcyA9IHZpcmNvbHMsXG4gICAgICAgICAgICAgICAgICAgICBsYWJlbHMgPSBjKFwiTmVnYXRpdmUgKG4gPSAxNjgpXCIsXCJQb3NpdGl2ZSAobiA9IDM0KVwiKSkgK1xuICBsZWdlbmRyeTo6c2NhbGVfeF9kZW5kcm8oY2x1c3QgPSBzaW5zcHVDbHVzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gXCJ0b3BcIikgK1xuICBzY2FsZV95X2NvbnRpbnVvdXMobmFtZSA9IFwiUmVsYXRpdmUgYWJ1bmRhbmNlICglKVwiLFxuICAgICAgICAgICAgICAgICAgICAgYnJlYWtzID0gYygwLDIwLDQwLDYwLDgwLDEwMCkpICtcbiAgdGhlbWUoYXhpcy50ZXh0LnggPSBlbGVtZW50X2JsYW5rKCksXG4gICAgICAgIGxlZ2VuZC50ZXh0ID0gZWxlbWVudF9tYXJrZG93bigpLFxuICAgICAgICBwYW5lbC5ncmlkID0gZWxlbWVudF9ibGFuaygpLFxuICAgICAgICBheGlzLnRpdGxlLnggPSBlbGVtZW50X2JsYW5rKCkpICtcbiAgZ3VpZGVzKGNvbG9yID0gZ3VpZGVfbGVnZW5kKG92ZXJyaWRlLmFlcyA9IGxpc3QobGluZXdpZHRoID0gNykpKSAtPiBhZHVsdHZpcmJhcnBsb3RcblxuZ2dzYXZlKHBsb3QgPSBhZHVsdHZpcmJhcnBsb3QsXG4gICAgICAgXCJhZHVsdF9yZWxfYWJfYmFycGxvdF92aXJ1cy5wZGZcIixcbiAgICAgICBoZWlnaHQgPSA4LFxuICAgICAgIHdpZHRoID0gMTIsXG4gICAgICAgdW5pdHMgPSBjKFwiaW5cIikpXG5gYGAifQ== -->

```r
allDf %>%
  dplyr::select(index,sampleloc,virus.bin,OTU,Abundance) %>%
  filter(!is.na(virus.bin)) %>%
  group_by(index) %>% 
  mutate(N = sum(Abundance)) %>%
  ungroup() %>%
  filter(N >= 1045) %>%
  .$index -> sinspu 

allDf %>%
  filter(index %in% sinspu) %>%
  mutate(genus = if_else(genus %in% c(\"Achromobacter\",\"Corynebacterium\",\"Pseudomonas\",\"Rothia\",\"Staphylococcus\",\"Streptococcus\"),paste(\"*\",genus,\"*\",sep = \"\"),\"Other\")) %>%
  ggplot(aes(x = index,
             y = rel_ab,
             fill = genus)) +
  geom_col(position = \"stack\") +
  geom_segment(aes(x = index,
                   y = 101,
                   yend = 110,
                   color = sampleloc),
               linewidth = 1) +
  scale_fill_manual(name = \"Genus\",
                    values = gencols) +
  scale_color_manual(name = \"Sample site\",
                     values = loccols,
                     labels = c(\"Sinus (n = 128)\",\"Sputum (n = 74)\")) +
  legendry::scale_x_dendro(clust = sinspuClust,
                           position = \"top\") +
  scale_y_continuous(name = \"Relative abundance (%)\",
                     breaks = c(0,20,40,60,80,100)) +
  theme(axis.text.x = element_blank(),
        legend.text = element_markdown(),
        panel.grid = element_blank(),
        axis.title.x = element_blank()) +
  guides(color = guide_legend(override.aes = list(linewidth = 7))) -> adultbarplot

ggsave(plot = adultbarplot,
       \"adult_rel_ab_barplot_sampleloc.pdf\",
       height = 8,
       width = 12,
       units =c (\"in\"))

allDf %>%
  filter(index %in% sinspu) %>%
  mutate(genus = if_else(genus %in% c(\"Achromobacter\",\"Corynebacterium\",\"Pseudomonas\",\"Rothia\",\"Staphylococcus\",\"Streptococcus\"),paste(\"*\",genus,\"*\",sep = \"\"),\"Other\")) %>%
  ggplot(aes(x = index,
             y = rel_ab,
             fill = genus,
             group = virus.bin)) +
  geom_col(position = \"stack\") +
  geom_segment(aes(x = index,
                   y = 101,
                   yend = 110,
                   color = virus.bin),
               linewidth = 1) +
  scale_fill_manual(name = \"Genus\",
                    values = gencols) +
  scale_color_manual(name = \"Sample viral status\",
                     values = vircols,
                     labels = c(\"Negative (n = 168)\",\"Positive (n = 34)\")) +
  legendry::scale_x_dendro(clust = sinspuClust,
                           position = \"top\") +
  scale_y_continuous(name = \"Relative abundance (%)\",
                     breaks = c(0,20,40,60,80,100)) +
  theme(axis.text.x = element_blank(),
        legend.text = element_markdown(),
        panel.grid = element_blank(),
        axis.title.x = element_blank()) +
  guides(color = guide_legend(override.aes = list(linewidth = 7))) -> adultvirbarplot

ggsave(plot = adultvirbarplot,
       \"adult_rel_ab_barplot_virus.pdf\",
       height = 8,
       width = 12,
       units = c(\"in\"))
```

<!-- rnb-source-end -->
<!-- KNITR_ASIS_OUTPUT_TOKEN -->"
"0","```r
allDf %>%
  dplyr::select(index,sampleloc,virus.bin,OTU,Abundance) %>%
  filter(!is.na(virus.bin)) %>%
  group_by(index) %>% 
  mutate(N = sum(Abundance)) %>%
  ungroup() %>%
  filter(N >= 1045) %>%
  .$index -> sinspu 

allDf %>%
  filter(index %in% sinspu) %>%
  mutate(genus = if_else(genus %in% c(\"Achromobacter\",\"Corynebacterium\",\"Pseudomonas\",\"Rothia\",\"Staphylococcus\",\"Streptococcus\"),paste(\"*\",genus,\"*\",sep = \"\"),\"Other\")) %>%
  ggplot(aes(x = index,
             y = rel_ab,
             fill = genus)) +
  geom_col(position = \"stack\") +
  geom_segment(aes(x = index,
                   y = 101,
                   yend = 110,
                   color = sampleloc),
               linewidth = 1) +
  scale_fill_manual(name = \"Genus\",
                    values = gencols) +
  scale_color_manual(name = \"Sample site\",
                     values = loccols,
                     labels = c(\"Sinus (n = 128)\",\"Sputum (n = 74)\")) +
  legendry::scale_x_dendro(clust = sinspuClust,
                           position = \"top\") +
  scale_y_continuous(name = \"Relative abundance (%)\",
                     breaks = c(0,20,40,60,80,100)) +
  theme(axis.text.x = element_blank(),
        legend.text = element_markdown(),
        panel.grid = element_blank(),
        axis.title.x = element_blank()) +
  guides(color = guide_legend(override.aes = list(linewidth = 7))) -> adultbarplot

ggsave(plot = adultbarplot,
       \"adult_rel_ab_barplot_sampleloc.pdf\",
       height = 8,
       width = 12,
       units =c (\"in\"))

allDf %>%
  filter(index %in% sinspu) %>%
  mutate(genus = if_else(genus %in% c(\"Achromobacter\",\"Corynebacterium\",\"Pseudomonas\",\"Rothia\",\"Staphylococcus\",\"Streptococcus\"),paste(\"*\",genus,\"*\",sep = \"\"),\"Other\")) %>%
  ggplot(aes(x = index,
             y = rel_ab,
             fill = genus,
             group = virus.bin)) +
  geom_col(position = \"stack\") +
  geom_segment(aes(x = index,
                   y = 101,
                   yend = 110,
                   color = virus.bin),
               linewidth = 1) +
  scale_fill_manual(name = \"Genus\",
                    values = gencols) +
  scale_color_manual(name = \"Sample viral status\",
                     values = vircols,
                     labels = c(\"Negative (n = 168)\",\"Positive (n = 34)\")) +
  legendry::scale_x_dendro(clust = sinspuClust,
                           position = \"top\") +
  scale_y_continuous(name = \"Relative abundance (%)\",
                     breaks = c(0,20,40,60,80,100)) +
  theme(axis.text.x = element_blank(),
        legend.text = element_markdown(),
        panel.grid = element_blank(),
        axis.title.x = element_blank()) +
  guides(color = guide_legend(override.aes = list(linewidth = 7))) -> adultvirbarplot

ggsave(plot = adultvirbarplot,
       \"adult_rel_ab_barplot_virus.pdf\",
       height = 8,
       width = 12,
       units = c(\"in\"))
```"
