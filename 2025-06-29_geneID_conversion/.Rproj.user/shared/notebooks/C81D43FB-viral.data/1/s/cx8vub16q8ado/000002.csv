"1","<!-- KNITR_ASIS_OUTPUT_TOKEN -->
<!-- rnb-source-begin eyJkYXRhIjoiYGBgclxuaXNfb3V0bGllciA8LSBmdW5jdGlvbih4KSB7XG4gIHJldHVybih4IDwgcXVhbnRpbGUoeCwgMC4yNSkgLSAxLjUgKiBJUVIoeCkgfCB4ID4gcXVhbnRpbGUoeCwgMC43NSkgKyAxLjUgKiBJUVIoeCkpXG59ICMgY2FsbHMgb3V0bGllcnMgdGhhdCBhcmUgPiAxLjUgSVFSIG91dHNpZGUgMjV0aCBhbmQgNzV0aCBxdWFudGlsZXNcblxuYWxsRGYgJT4lXG4gIGdyb3VwX2J5KE9UVSx2aXJ1cy5iaW4pICU+JVxuICBtdXRhdGUob3V0bGllciA9IGlzX291dGxpZXIocmVsX2FiKSkgJT4lXG4gIHVuZ3JvdXAoKSAtPiBhbGxEZlxuXG5hbGxEZiAlPiVcbiAgZ3JvdXBfYnkoT1RVLHZpcnVzLmJpbixzYW1wbGVsb2MpICU+JVxuICBtdXRhdGUoc2FtcGxlbG9jLm91dGxpZXIgPSBpc19vdXRsaWVyKHJlbF9hYikpICU+JVxuICB1bmdyb3VwKCkgLT4gYWxsRGZcblxuYWxsRGYgJT4lXG4gIGZpbHRlcighaXMubmEodmlydXMuYmluKSkgJT4lXG4gIGZpbHRlcihPVFUgPT0gXCJiM2JkNDk1MzU3ZDFlYjhjNmM4YWEyOTUzZGNmMGZiNVwiKSAlPiVcbiAgZ2dwbG90KGFlcyh4ID0gdmlydXMuYmluLFxuICAgICAgICAgICAgIHkgPSByZWxfYWIpKSArXG4gIGdlb21fYm94cGxvdChvdXRsaWVyLnNoYXBlID0gTkEpICtcbiAgZ2VvbV9qaXR0ZXIoYWVzKGNvbG9yID0gdmlydXMuYmluLFxuICAgICAgICAgICAgICAgICAgc2hhcGUgPSBzYW1wbGVsb2Mub3V0bGllciksXG4gICAgICAgICAgICAgIHdpZHRoID0gMC4yLFxuICAgICAgICAgICAgICBzaXplID0gMixcbiAgICAgICAgICAgICAgYWxwaGEgPSAwLjUpICtcbiAgc2NhbGVfY29sb3JfbWFudWFsKHZhbHVlcyA9IGMoXCJncmV5NDhcIixcInJlZFwiKSxcbiAgICAgICAgICAgICAgICAgICAgIGd1aWRlID0gXCJub25lXCIpICtcbiAgc2NhbGVfc2hhcGVfbWFudWFsKGxhYmVscyA9IGMoXCJcIixcIk91dGxpZXJcIiksXG4gICAgICAgICAgICAgICAgICAgICB2YWx1ZXMgPSBjKDE2LDEpKSArXG4gIHNjYWxlX3hfZGlzY3JldGUobmFtZSA9IFwiUmVzcGlyYXRvcnkgdmlyYWxcXG5pbmZlY3Rpb24gc3RhdHVzXCIsXG4gICAgICAgICAgICAgICAgICAgbGFiZWxzID0gYyhcIk5lZ2F0aXZlXCIsXCJQb3NpdGl2ZVwiKSkgK1xuICBzY2FsZV95X2NvbnRpbnVvdXMobmFtZSA9IFwiKlJvdGhpYSogcmVsYXRpdmU8YnI+YWJ1bmRhbmNlICglKVwiLFxuICAgICAgICAgICAgICAgICAgICAgbGltaXRzID0gYygwLDExMCksXG4gICAgICAgICAgICAgICAgICAgICBicmVha3MgPSBzZXEoMCwxMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnkgPSAyNSkpICtcbiAgZmFjZXRfZ3JpZChjb2xzID0gdmFycyhzYW1wbGVsb2MpLFxuICAgICAgICAgICAgIGxhYmVsbGVyID0gYXNfbGFiZWxsZXIobG9jbGFicykpICtcbiAgdGhlbWUoc3RyaXAuYmFja2dyb3VuZCA9IGVsZW1lbnRfcmVjdChmaWxsID0gXCJ3aGl0ZVwiKSxcbiAgICAgICAgYXhpcy50aXRsZS55ID0gZWxlbWVudF9tYXJrZG93bigpLFxuICAgICAgICBsZWdlbmQudGl0bGUgPSBlbGVtZW50X2JsYW5rKCksXG4gICAgICAgIGxlZ2VuZC5wb3NpdGlvbiA9IFwibm9uZVwiKSAtPiBzaW5zcHVSb3RoaWFWaXJcblxuc2luc3B1Um90aGlhVmlyXG5cbmFsbERmICU+JVxuICBmaWx0ZXIoIWlzLm5hKHZpcnVzLmJpbikpICU+JVxuICBmaWx0ZXIoT1RVID09IFwiYjNiZDQ5NTM1N2QxZWI4YzZjOGFhMjk1M2RjZjBmYjVcIikgJT4lXG4gIGdncGxvdChhZXMoeCA9IHZpcnVzLmJpbixcbiAgICAgICAgICAgICB5ID0gcmVsX2FiKSkgK1xuICBnZW9tX2JveHBsb3Qob3V0bGllci5zaGFwZSA9IE5BKSArXG4gIGdlb21faml0dGVyKGFlcyhjb2xvciA9IHZpcnVzLmJpbixcbiAgICAgICAgICAgICAgICAgIHNoYXBlID0gb3V0bGllciksXG4gICAgICAgICAgICAgIHdpZHRoID0gMC4yLFxuICAgICAgICAgICAgICBzaXplID0gMixcbiAgICAgICAgICAgICAgYWxwaGEgPSAwLjUpICtcbiAgc2NhbGVfY29sb3JfbWFudWFsKHZhbHVlcyA9IGMoXCJncmV5NDhcIixcInJlZFwiKSkgK1xuICBzY2FsZV9zaGFwZV9tYW51YWwodmFsdWVzID0gYygxNiwxKSkgK1xuICBzY2FsZV94X2Rpc2NyZXRlKG5hbWUgPSBcIlJlc3BpcmF0b3J5IHZpcmFsXFxuaW5mZWN0aW9uIHN0YXR1c1wiLFxuICAgICAgICAgICAgICAgICAgIGxhYmVscyA9IGMoXCJOZWdhdGl2ZVwiLFwiUG9zaXRpdmVcIikpICtcbiAgc2NhbGVfeV9jb250aW51b3VzKG5hbWUgPSBcIipSb3RoaWEqIHJlbGF0aXZlPGJyPmFidW5kYW5jZSAoJSlcIixcbiAgICAgICAgICAgICAgICAgICAgIGxpbWl0cyA9IGMoMCwxMTApLFxuICAgICAgICAgICAgICAgICAgICAgYnJlYWtzID0gc2VxKDAsMTAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ5ID0gMjUpKSArXG4gIGFubm90YXRlKFwic2VnbWVudFwiLFxuICAgICAgICAgICB4ID0gMSxcbiAgICAgICAgICAgeGVuZCA9IDIsXG4gICAgICAgICAgIHkgPSAxMDUpICtcbiAgYW5ub3RhdGUoXCJ0ZXh0XCIsXG4gICAgICAgICAgIGxhYmVsID0gXCIqXCIsXG4gICAgICAgICAgIHNpemUgPSA4LFxuICAgICAgICAgICB4ID0gMS41LFxuICAgICAgICAgICB5ID0gMTA3KSArXG4gIHRoZW1lKGxlZ2VuZC5wb3NpdGlvbiA9IFwibm9uZVwiLFxuICAgICAgICBzdHJpcC5iYWNrZ3JvdW5kID0gZWxlbWVudF9yZWN0KGZpbGwgPSBcIndoaXRlXCIpLFxuICAgICAgICBheGlzLnRpdGxlLnkgPSBlbGVtZW50X21hcmtkb3duKCksXG4gICAgICAgIGF4aXMudGl0bGUueCA9IGVsZW1lbnRfYmxhbmsoKSkgLT4gY29tYlJvdGhpYVZpclxuXG5wbG90X2dyaWQoY29tYlJvdGhpYVZpcixzaW5zcHVSb3RoaWFWaXIsXG4gICAgICAgICAgbmNvbCA9IDEsXG4gICAgICAgICAgcmVsX2hlaWdodHMgPSBjKDAuNywxKSkgLT4gdmlydXNSb3RoaWFcblxuZ2dzYXZlKHBsb3QgPSB2aXJ1c1JvdGhpYSxcbiAgICAgICBcIk1hQXNMaW4yLlJvdGhpYS52aXJ1cy5hYnVuZGFuY2UudGlmZlwiLFxuICAgICAgIHdpZHRoID0gOCxcbiAgICAgICBoZWlnaHQgPSAxMixcbiAgICAgICB1bml0cyA9IGMoXCJpblwiKSlcbmBgYCJ9 -->

```r
is_outlier <- function(x) {
  return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
} # calls outliers that are > 1.5 IQR outside 25th and 75th quantiles

allDf %>%
  group_by(OTU,virus.bin) %>%
  mutate(outlier = is_outlier(rel_ab)) %>%
  ungroup() -> allDf

allDf %>%
  group_by(OTU,virus.bin,sampleloc) %>%
  mutate(sampleloc.outlier = is_outlier(rel_ab)) %>%
  ungroup() -> allDf

allDf %>%
  filter(!is.na(virus.bin)) %>%
  filter(OTU == \"b3bd495357d1eb8c6c8aa2953dcf0fb5\") %>%
  ggplot(aes(x = virus.bin,
             y = rel_ab)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(aes(color = virus.bin,
                  shape = sampleloc.outlier),
              width = 0.2,
              size = 2,
              alpha = 0.5) +
  scale_color_manual(values = c(\"grey48\",\"red\"),
                     guide = \"none\") +
  scale_shape_manual(labels = c(\"\",\"Outlier\"),
                     values = c(16,1)) +
  scale_x_discrete(name = \"Respiratory viral\ninfection status\",
                   labels = c(\"Negative\",\"Positive\")) +
  scale_y_continuous(name = \"*Rothia* relative<br>abundance (%)\",
                     limits = c(0,110),
                     breaks = seq(0,100,
                                  by = 25)) +
  facet_grid(cols = vars(sampleloc),
             labeller = as_labeller(loclabs)) +
  theme(strip.background = element_rect(fill = \"white\"),
        axis.title.y = element_markdown(),
        legend.title = element_blank(),
        legend.position = \"none\") -> sinspuRothiaVir

sinspuRothiaVir

allDf %>%
  filter(!is.na(virus.bin)) %>%
  filter(OTU == \"b3bd495357d1eb8c6c8aa2953dcf0fb5\") %>%
  ggplot(aes(x = virus.bin,
             y = rel_ab)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(aes(color = virus.bin,
                  shape = outlier),
              width = 0.2,
              size = 2,
              alpha = 0.5) +
  scale_color_manual(values = c(\"grey48\",\"red\")) +
  scale_shape_manual(values = c(16,1)) +
  scale_x_discrete(name = \"Respiratory viral\ninfection status\",
                   labels = c(\"Negative\",\"Positive\")) +
  scale_y_continuous(name = \"*Rothia* relative<br>abundance (%)\",
                     limits = c(0,110),
                     breaks = seq(0,100,
                                  by = 25)) +
  annotate(\"segment\",
           x = 1,
           xend = 2,
           y = 105) +
  annotate(\"text\",
           label = \"*\",
           size = 8,
           x = 1.5,
           y = 107) +
  theme(legend.position = \"none\",
        strip.background = element_rect(fill = \"white\"),
        axis.title.y = element_markdown(),
        axis.title.x = element_blank()) -> combRothiaVir

plot_grid(combRothiaVir,sinspuRothiaVir,
          ncol = 1,
          rel_heights = c(0.7,1)) -> virusRothia

ggsave(plot = virusRothia,
       \"MaAsLin2.Rothia.virus.abundance.tiff\",
       width = 8,
       height = 12,
       units = c(\"in\"))
```

<!-- rnb-source-end -->
<!-- KNITR_ASIS_OUTPUT_TOKEN -->"
"0","```r
is_outlier <- function(x) {
  return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
} # calls outliers that are > 1.5 IQR outside 25th and 75th quantiles

allDf %>%
  group_by(OTU,virus.bin) %>%
  mutate(outlier = is_outlier(rel_ab)) %>%
  ungroup() -> allDf

allDf %>%
  group_by(OTU,virus.bin,sampleloc) %>%
  mutate(sampleloc.outlier = is_outlier(rel_ab)) %>%
  ungroup() -> allDf

allDf %>%
  filter(!is.na(virus.bin)) %>%
  filter(OTU == \"b3bd495357d1eb8c6c8aa2953dcf0fb5\") %>%
  ggplot(aes(x = virus.bin,
             y = rel_ab)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(aes(color = virus.bin,
                  shape = sampleloc.outlier),
              width = 0.2,
              size = 2,
              alpha = 0.5) +
  scale_color_manual(values = c(\"grey48\",\"red\"),
                     guide = \"none\") +
  scale_shape_manual(labels = c(\"\",\"Outlier\"),
                     values = c(16,1)) +
  scale_x_discrete(name = \"Respiratory viral\ninfection status\",
                   labels = c(\"Negative\",\"Positive\")) +
  scale_y_continuous(name = \"*Rothia* relative<br>abundance (%)\",
                     limits = c(0,110),
                     breaks = seq(0,100,
                                  by = 25)) +
  facet_grid(cols = vars(sampleloc),
             labeller = as_labeller(loclabs)) +
  theme(strip.background = element_rect(fill = \"white\"),
        axis.title.y = element_markdown(),
        legend.title = element_blank(),
        legend.position = \"none\") -> sinspuRothiaVir

sinspuRothiaVir

allDf %>%
  filter(!is.na(virus.bin)) %>%
  filter(OTU == \"b3bd495357d1eb8c6c8aa2953dcf0fb5\") %>%
  ggplot(aes(x = virus.bin,
             y = rel_ab)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(aes(color = virus.bin,
                  shape = outlier),
              width = 0.2,
              size = 2,
              alpha = 0.5) +
  scale_color_manual(values = c(\"grey48\",\"red\")) +
  scale_shape_manual(values = c(16,1)) +
  scale_x_discrete(name = \"Respiratory viral\ninfection status\",
                   labels = c(\"Negative\",\"Positive\")) +
  scale_y_continuous(name = \"*Rothia* relative<br>abundance (%)\",
                     limits = c(0,110),
                     breaks = seq(0,100,
                                  by = 25)) +
  annotate(\"segment\",
           x = 1,
           xend = 2,
           y = 105) +
  annotate(\"text\",
           label = \"*\",
           size = 8,
           x = 1.5,
           y = 107) +
  theme(legend.position = \"none\",
        strip.background = element_rect(fill = \"white\"),
        axis.title.y = element_markdown(),
        axis.title.x = element_blank()) -> combRothiaVir

plot_grid(combRothiaVir,sinspuRothiaVir,
          ncol = 1,
          rel_heights = c(0.7,1)) -> virusRothia

ggsave(plot = virusRothia,
       \"MaAsLin2.Rothia.virus.abundance.tiff\",
       width = 8,
       height = 12,
       units = c(\"in\"))
```"
