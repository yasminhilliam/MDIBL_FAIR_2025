"1","<!-- KNITR_ASIS_OUTPUT_TOKEN -->
<!-- rnb-source-begin eyJkYXRhIjoiYGBgclxuZ2VuSW50IDwtIGMoXCJDb3J5bmViYWN0ZXJpdW1cIixcIlJvdGhpYVwiLFwiQmFjaWxsdXNcIixcIkdyYW51bGljYXRlbGxhXCIsXCJTdGFwaHlsb2NvY2N1c1wiLFwiU3RyZXB0b2NvY2N1c1wiLFwiUHJldm90ZWxsYVwiLFwiQWNocm9tb2JhY3RlclwiLFwiQnVya2hvbGRlcmlhXCIsXCJFc2NoZXJpY2hpYVwiLFwiSGFlbW9waGlsdXNcIixcbiAgICAgICAgICAgIFwiTW9yYXhlbGxhXCIsXCJOZWlzc2VyaWFcIixcIlBzZXVkb21vbmFzXCIsXCJTZXJyYXRpYVwiLFwiU3Rlbm90cm9waG9tb25hc1wiLFwiVmVpbGxvbmVsbGFcIilcbiAgXG4gIFxuYWxsRGYgJT4lXG4gIGZpbHRlcihpbmRleCAlaW4lIHNpbnNwdUZpbHQkaW5kZXgpICU+JVxuICBtdXRhdGUoZ2VuID0gaWZfZWxzZShnZW51cyAlaW4lIGdlbkludCwgcGFzdGUoXCIqXCIsZ2VudXMsXCIqXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXAgPSBcIlwiKSwgXCJPdGhlclwiKSkgJT4lXG4gIG11dGF0ZSh2aXJ1cy5jYXQgPSBpZl9lbHNlKHZpcnVzLmJpbiA9PSAwLCBcIk5lZ2F0aXZlXCIsIFwiUG9zaXRpdmVcIikpICU+JVxuICBnZ3Bsb3QoKSArXG4gIGdlb21fY29sKGFlcyh4ID0gaW5kZXgsXG4gICAgICAgICAgICAgICB5ID0gcmVsX2FiLFxuICAgICAgICAgICAgICAgZmlsbCA9IGdlbiksXG4gICAgICAgICAgIHBvc2l0aW9uID0gXCJzdGFja1wiKSArXG4gIGdlb21fcG9pbnQoZGF0YSA9IHNpbnNwdUZpbHRNZXRhLFxuICAgICAgICAgICAgIGFlcyh4ID0gaW5kZXgsXG4gICAgICAgICAgICAgICAgIHkgPSAxMDEsXG4gICAgICAgICAgICAgICAgIGNvbG9yID0gazQpLFxuICAgICAgICAgICAgIHNoYXBlID0gMTUpICtcbiAgc2NhbGVfY29sb3JfbWFudWFsKG5hbWUgPSBcIkNsdXN0ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgIHZhbHVlcyA9IGMoXCIjQjc5RjAwXCIsXCIjMDBDMTlBXCIsXCIjOUY4Q0ZGXCIsXCIjRkI3MzdBXCIpKSArXG4gIGd1aWRlcyhjb2xvciA9IGd1aWRlX2xlZ2VuZChvdmVycmlkZS5hZXMgPSBsaXN0KHNpemUgPSA2KSkpICtcbiAgZ2duZXdzY2FsZTo6bmV3X3NjYWxlX2NvbG9yKCkgK1xuICBnZW9tX3BvaW50KGFlcyh4ID0gaW5kZXgsXG4gICAgICAgICAgICAgICAgIHkgPSAxMDMsXG4gICAgICAgICAgICAgICAgIGNvbG9yID0gc2FtcGxlbG9jKSxcbiAgICAgICAgICAgICBzaGFwZSA9IDE1KSArXG4gIHNjYWxlX2NvbG9yX21hbnVhbChuYW1lID0gXCJTYW1wbGUgbG9jYXRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgIHZhbHVlcyA9IGMoXCJwdXJwbGU0XCIsXCJvcmFuZ2VcIiksXG4gICAgICAgICAgICAgICAgICAgICBsYWJlbHMgPSBjKFwiU2ludXNcIixcIlNwdXR1bVwiKSkgK1xuICBzY2FsZV94X2RlbmRyb2dyYW0oaGNsdXN0ID0gc2luc3B1Q2x1c3QsXG4gICAgICAgICAgICAgICAgICAgICBsYWJlbHMgPSBOVUxMLFxuICAgICAgICAgICAgICAgICAgICAgbmFtZSA9IE5VTEwsXG4gICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IFwidG9wXCIpICtcbiAgc2NhbGVfeV9jb250aW51b3VzKG5hbWUgPSBcIlJlbGF0aXZlIGFidW5kYW5jZSAoJSlcIixcbiAgICAgICAgICAgICAgICAgICAgIGxpbWl0cyA9IGMoMCwxMDQpLFxuICAgICAgICAgICAgICAgICAgICAgZXhwYW5kID0gYygwLDApKSArXG4gIHNjYWxlX2ZpbGxfbWFudWFsKG5hbWUgPSBcIkdlbnVzXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlcyA9IGdlbkNvbHMpICtcbiAgdGhlbWUobGVnZW5kLnRleHQgPSBlbGVtZW50X21hcmtkb3duKCksXG4gICAgICAgIHBhbmVsLmdyaWQubWFqb3IgPSBlbGVtZW50X2JsYW5rKCksXG4gICAgICAgIHBhbmVsLmdyaWQubWlub3IgPSBlbGVtZW50X2JsYW5rKCksXG4gICAgICAgIGF4aXMudGlja3MgPSBlbGVtZW50X2JsYW5rKCkpICtcbiAgZ3VpZGVzKGNvbG9yID0gZ3VpZGVfbGVnZW5kKG92ZXJyaWRlLmFlcyA9IGxpc3Qoc2l6ZSA9IDYpKSkgLT4gYmFyZGVuZHJvXG5cbmJhcmRlbmRyb1xuXG5nZ3NhdmUocGxvdCA9IGJhcmRlbmRybyxcbiAgICAgICBcInRheGEuYmFycGxvdC5kZW5kcm9ncmFtLnRpZmZcIixcbiAgICAgICBoZWlnaHQgPSAxMCxcbiAgICAgICB3aWR0aCA9IDEyLFxuICAgICAgIHVuaXRzID0gYyhcImluXCIpKVxuXG5hbGxEZiAlPiVcbiAgZmlsdGVyKGluZGV4ICVpbiUgc2luc3B1RmlsdCRpbmRleCkgJT4lXG4gIGxlZnRfam9pbiguLHNpbnNwdUZpbHRNZXRhKSAlPiVcbiAgZ3JvdXBfYnkoaW5kZXgpICU+JVxuICBzbGljZV9tYXgocmVsX2FiLFxuICAgICAgICAgICAgbiA9IDEpICU+JVxuICB1bmdyb3VwKCkgJT4lXG4gIGNvdW50KGdlbnVzLGs0KSAlPiVcbiAgbXV0YXRlKGdlbnVzID0gaWZfZWxzZShnZW51cyAlaW4lIGdlbkludCxcbiAgICAgICAgICAgICAgICAgICAgICAgICBwYXN0ZShcIipcIixnZW51cyxcIipcIiwgc2VwID0gXCJcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgXCJPdGhlclwiKSkgJT4lXG4gIGdncGxvdChhZXMoeCA9IGs0LFxuICAgICAgICAgICAgIHkgPSBuLFxuICAgICAgICAgICAgIGZpbGwgPSBnZW51cykpICtcbiAgZ2VvbV9jb2wocG9zaXRpb24gPSBcInN0YWNrXCIpICtcbiAgc2NhbGVfZmlsbF9tYW51YWwobmFtZSA9IFwiVG9wIGdlbnVzXFxucGVyIHNhbXBsZVwiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZXMgPSBnZW5Db2xzKSArXG4gIGxhYnMoeCA9IFwiQ2x1c3RlclwiLFxuICAgICAgIHkgPSBcIk51bWJlciBvZiBzYW1wbGVzXCIpICtcbiAgdGhlbWUobGVnZW5kLnRleHQgPSBlbGVtZW50X21hcmtkb3duKCkpIC0+IHRvcGdlbnBlcmNsdXN0ZXJcblxudG9wZ2VucGVyY2x1c3RlclxuXG5nZ3NhdmUocGxvdCA9IHRvcGdlbnBlcmNsdXN0ZXIsXG4gICAgICAgXCJ0b3AuZ2VuZXJhLnBlci5jbHVzdGVyLnRpZmZcIixcbiAgICAgICBoZWlnaHQgPSA4LFxuICAgICAgIHdpZHRoID0gMTIsXG4gICAgICAgdW5pdHMgPSBjKFwiaW5cIikpXG5gYGAifQ== -->

```r
genInt <- c(\"Corynebacterium\",\"Rothia\",\"Bacillus\",\"Granulicatella\",\"Staphylococcus\",\"Streptococcus\",\"Prevotella\",\"Achromobacter\",\"Burkholderia\",\"Escherichia\",\"Haemophilus\",
            \"Moraxella\",\"Neisseria\",\"Pseudomonas\",\"Serratia\",\"Stenotrophomonas\",\"Veillonella\")
  
  
allDf %>%
  filter(index %in% sinspuFilt$index) %>%
  mutate(gen = if_else(genus %in% genInt, paste(\"*\",genus,\"*\",
                                                sep = \"\"), \"Other\")) %>%
  mutate(virus.cat = if_else(virus.bin == 0, \"Negative\", \"Positive\")) %>%
  ggplot() +
  geom_col(aes(x = index,
               y = rel_ab,
               fill = gen),
           position = \"stack\") +
  geom_point(data = sinspuFiltMeta,
             aes(x = index,
                 y = 101,
                 color = k4),
             shape = 15) +
  scale_color_manual(name = \"Cluster\",
                     values = c(\"#B79F00\",\"#00C19A\",\"#9F8CFF\",\"#FB737A\")) +
  guides(color = guide_legend(override.aes = list(size = 6))) +
  ggnewscale::new_scale_color() +
  geom_point(aes(x = index,
                 y = 103,
                 color = sampleloc),
             shape = 15) +
  scale_color_manual(name = \"Sample location\",
                     values = c(\"purple4\",\"orange\"),
                     labels = c(\"Sinus\",\"Sputum\")) +
  scale_x_dendrogram(hclust = sinspuClust,
                     labels = NULL,
                     name = NULL,
                     position = \"top\") +
  scale_y_continuous(name = \"Relative abundance (%)\",
                     limits = c(0,104),
                     expand = c(0,0)) +
  scale_fill_manual(name = \"Genus\",
                    values = genCols) +
  theme(legend.text = element_markdown(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.ticks = element_blank()) +
  guides(color = guide_legend(override.aes = list(size = 6))) -> bardendro

bardendro

ggsave(plot = bardendro,
       \"taxa.barplot.dendrogram.tiff\",
       height = 10,
       width = 12,
       units = c(\"in\"))

allDf %>%
  filter(index %in% sinspuFilt$index) %>%
  left_join(.,sinspuFiltMeta) %>%
  group_by(index) %>%
  slice_max(rel_ab,
            n = 1) %>%
  ungroup() %>%
  count(genus,k4) %>%
  mutate(genus = if_else(genus %in% genInt,
                         paste(\"*\",genus,\"*\", sep = \"\"),
                         \"Other\")) %>%
  ggplot(aes(x = k4,
             y = n,
             fill = genus)) +
  geom_col(position = \"stack\") +
  scale_fill_manual(name = \"Top genus\nper sample\",
                    values = genCols) +
  labs(x = \"Cluster\",
       y = \"Number of samples\") +
  theme(legend.text = element_markdown()) -> topgenpercluster

topgenpercluster

ggsave(plot = topgenpercluster,
       \"top.genera.per.cluster.tiff\",
       height = 8,
       width = 12,
       units = c(\"in\"))
```

<!-- rnb-source-end -->
<!-- KNITR_ASIS_OUTPUT_TOKEN -->"
"0","```r
genInt <- c(\"Corynebacterium\",\"Rothia\",\"Bacillus\",\"Granulicatella\",\"Staphylococcus\",\"Streptococcus\",\"Prevotella\",\"Achromobacter\",\"Burkholderia\",\"Escherichia\",\"Haemophilus\",
            \"Moraxella\",\"Neisseria\",\"Pseudomonas\",\"Serratia\",\"Stenotrophomonas\",\"Veillonella\")
  
  
allDf %>%
  filter(index %in% sinspuFilt$index) %>%
  mutate(gen = if_else(genus %in% genInt, paste(\"*\",genus,\"*\",
                                                sep = \"\"), \"Other\")) %>%
  mutate(virus.cat = if_else(virus.bin == 0, \"Negative\", \"Positive\")) %>%
  ggplot() +
  geom_col(aes(x = index,
               y = rel_ab,
               fill = gen),
           position = \"stack\") +
  geom_point(data = sinspuFiltMeta,
             aes(x = index,
                 y = 101,
                 color = k4),
             shape = 15) +
  scale_color_manual(name = \"Cluster\",
                     values = c(\"#B79F00\",\"#00C19A\",\"#9F8CFF\",\"#FB737A\")) +
  guides(color = guide_legend(override.aes = list(size = 6))) +
  ggnewscale::new_scale_color() +
  geom_point(aes(x = index,
                 y = 103,
                 color = sampleloc),
             shape = 15) +
  scale_color_manual(name = \"Sample location\",
                     values = c(\"purple4\",\"orange\"),
                     labels = c(\"Sinus\",\"Sputum\")) +
  scale_x_dendrogram(hclust = sinspuClust,
                     labels = NULL,
                     name = NULL,
                     position = \"top\") +
  scale_y_continuous(name = \"Relative abundance (%)\",
                     limits = c(0,104),
                     expand = c(0,0)) +
  scale_fill_manual(name = \"Genus\",
                    values = genCols) +
  theme(legend.text = element_markdown(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.ticks = element_blank()) +
  guides(color = guide_legend(override.aes = list(size = 6))) -> bardendro

bardendro

ggsave(plot = bardendro,
       \"taxa.barplot.dendrogram.tiff\",
       height = 10,
       width = 12,
       units = c(\"in\"))

allDf %>%
  filter(index %in% sinspuFilt$index) %>%
  left_join(.,sinspuFiltMeta) %>%
  group_by(index) %>%
  slice_max(rel_ab,
            n = 1) %>%
  ungroup() %>%
  count(genus,k4) %>%
  mutate(genus = if_else(genus %in% genInt,
                         paste(\"*\",genus,\"*\", sep = \"\"),
                         \"Other\")) %>%
  ggplot(aes(x = k4,
             y = n,
             fill = genus)) +
  geom_col(position = \"stack\") +
  scale_fill_manual(name = \"Top genus\nper sample\",
                    values = genCols) +
  labs(x = \"Cluster\",
       y = \"Number of samples\") +
  theme(legend.text = element_markdown()) -> topgenpercluster

topgenpercluster

ggsave(plot = topgenpercluster,
       \"top.genera.per.cluster.tiff\",
       height = 8,
       width = 12,
       units = c(\"in\"))
```"
